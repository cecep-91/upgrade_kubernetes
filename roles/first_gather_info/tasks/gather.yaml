# ----- SET NODE UPGRADE STATUS
- name: Set node upgrade status
  ansible.builtin.set_fact:
    gather_done: false

# ----- GET KUBEADM VERSION
- name: Get $kubeadm_version
  block:
    - name: Get the kubeadm version
      shell: "kubeadm version -o yaml | grep minor | cut -d'\"' -f2"
      register: kubeadm_version_raw
      retries: 3
      delay: 3
      changed_when: false

    - name: Set $kubeadm_version
      set_fact:
        kubeadm_version: "{{ kubeadm_version_raw.stdout_lines.0  }}"

# ----- GET KUBELET VERSION
- name: Get $kubelet_version
  block:
    - name: Get the kubelet version
      shell: "kubelet --version | cut -d. -f2"
      register: kubelet_version_raw
      retries: 3
      delay: 3
      changed_when: false

    - name: Set $kubelet_version
      set_fact:
        kubelet_version: "{{ kubelet_version_raw.stdout_lines.0  }}"

# ----- GET K8S NODE NAME
- name: Get $k8s_node_name
  block:
    - name: Get all nodes name
      delegate_to: "{{ groups['first_master'][0] }}"
      shell: "KUBECONFIG={{ kubernetes.kubeconfig }} kubectl get node -o wide"
      register: k8s_nodes_raw
      changed_when: false

    - name: Variable for storing "kubectl get node -o wide" command output
      set_fact:
        nodes: "{{ hostvars[groups['first_master'][0]].k8s_nodes_raw.stdout }}"

    - name: Get this node's name
      shell: "echo -e '{{ nodes }}' | grep -E '({{ ansible_locally_reachable_ips.ipv4 | join('|') }})' | awk '{print $1}'"
      register: k8s_node_name_raw
      changed_when: false

    - name: Set $k8s_node_name
      set_fact:
        k8s_node_name: "{{ k8s_node_name_raw.stdout_lines.0 }}"

# ----- DEBUG ALL GATHERED VARIABLE
- debug:
    msg: 
      - "Node: {{ k8s_node_name }}"
      - "  - Kubeadm version: {{ kubeadm_version }}"
      - "  - Kubelet version: {{ kubelet_version }}"